"""
Django settings for crm_project project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# AUTH_USER_MODEL = 'accounts.User' # Removed custom user model setting

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-yr3z1&-1-!qbh!_!*rk9+o27&=ewfx*aq_r))rz&ed76b*kqqw"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    'django.contrib.sites',
    # 3rd party apps
    'rest_framework',
    'rest_framework.authtoken',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'dj_rest_auth',
    'dj_rest_auth.registration',
    'corsheaders',
    # Local apps
    'backend.leads.apps.LeadsConfig',
    'backend.tasks',
    'backend.portfolio',
    'backend.accounts',
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    'corsheaders.middleware.CorsMiddleware',
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    'allauth.account.middleware.AccountMiddleware',
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "crm_project.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "crm_project.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'pixelforge_db',      # Replace with your DB name if different
        'USER': 'pixelforge_user',  # Replace with your DB user if different
        'PASSWORD': 'pixelforge_password', # Replace with your DB password
        'HOST': 'db',             # This will be the service name in docker-compose.yml
        'PORT': '5432',           # Default PostgreSQL port
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

SITE_ID = 1

# --- ALLAUTH ACCOUNT SETTINGS SHOULD REMAIN COMMENTED OUT OR REMOVED ---
# ACCOUNT_AUTHENTICATION_METHOD = 'email' 
# ACCOUNT_EMAIL_REQUIRED = True 
# ACCOUNT_USERNAME_REQUIRED = False 
# ACCOUNT_LOGIN_METHODS = ['email'] 
# ACCOUNT_SIGNUP_FIELDS = ['email'] 
# ACCOUNT_USER_MODEL_USERNAME_FIELD = None  
# ACCOUNT_EMAIL_VERIFICATION = 'none'  
# --- END OF ALLAUTH ACCOUNT SETTINGS ---

# AUTH_USER_MODEL = 'accounts.User' # Ensure this is commented out or removed

# Email backend for development (prints emails to console)
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# CORS settings
CORS_ALLOW_ALL_ORIGINS = True
# CORS_ALLOWED_ORIGINS = [
#     "http://localhost:8080", # Example for Flutter web dev server
#     "http://127.0.0.1:8080",
# Add other origins as needed, e.g., your Flutter app's port during development
# ]

# Django REST Framework settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticatedOrReadOnly',
    ),
}

# dj_rest_auth settings
REST_AUTH = {
    # 'LOGIN_SERIALIZER': 'backend.accounts.serializers.CustomLoginSerializer', # REMOVED to revert to default username login
    # You might want to customize other serializers as well, e.g., for registration
    # 'REGISTER_SERIALIZER': 'backend.accounts.serializers.CustomRegisterSerializer',
    # 'USER_DETAILS_SERIALIZER': 'backend.accounts.serializers.CustomUserDetailsSerializer',
}
